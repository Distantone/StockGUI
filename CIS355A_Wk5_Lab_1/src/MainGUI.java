

import java.io.FileNotFoundException;
import java.io.IOException;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;


/**
 *
 * @author Payden Boughton
 */
public class MainGUI extends javax.swing.JFrame {
    //class level referneces
    DefaultListModel<Stock> model;
    ArrayList<Stock> stockList;
     NumberFormat fmt = NumberFormat.getCurrencyInstance();
    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        model = new DefaultListModel<Stock> ();
        stockList = new ArrayList<Stock> ();
        initComponents();
        this.setLocationRelativeTo(null);
        
        //add sample stocks
        Stock stk1 = new Stock("IBM",100,50,70);
        model.addElement(stk1);
        stockList.add(stk1);
        Stock stk2 = new Stock("Apple",10,100,90);
        model.addElement(stk2);
        stockList.add(stk2);
        
        //update total value
        updateTotalValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainTabbedPane = new javax.swing.JTabbedPane();
        listPanel = new javax.swing.JPanel();
        scrPane = new javax.swing.JScrollPane();
        listStocks = new javax.swing.JList<>();
        lblProfitLoss = new javax.swing.JLabel();
        profitLossTextField = new javax.swing.JTextField();
        btnRemove = new javax.swing.JButton();
        totalValueTextField = new javax.swing.JTextField();
        lblTotalValue = new javax.swing.JLabel();
        addStockPane = new javax.swing.JPanel();
        lblStock = new javax.swing.JLabel();
        lblQuantity = new javax.swing.JLabel();
        lblPurchasePrice = new javax.swing.JLabel();
        lblCurrentPrice = new javax.swing.JLabel();
        stockTextField = new javax.swing.JTextField();
        quantityTextField = new javax.swing.JTextField();
        currentPriceTextField = new javax.swing.JTextField();
        purchasePriceTextField = new javax.swing.JTextField();
        btnAddStock = new javax.swing.JButton();
        jMenuBar = new javax.swing.JMenuBar();
        jMenu = new javax.swing.JMenu();
        menuItemOpen = new javax.swing.JMenuItem();
        menuItemSave = new javax.swing.JMenuItem();
        sep = new javax.swing.JPopupMenu.Separator();
        menuItemExit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Portfolio Management");

        listPanel.setToolTipText("Show Stock List");

        listStocks.setModel(model);
        listStocks.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listStocksValueChanged(evt);
            }
        });
        scrPane.setViewportView(listStocks);

        lblProfitLoss.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblProfitLoss.setText("Profit/Loss:");

        profitLossTextField.setEditable(false);
        profitLossTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        totalValueTextField.setEditable(false);
        totalValueTextField.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        lblTotalValue.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblTotalValue.setText("Total Value:");

        javax.swing.GroupLayout listPanelLayout = new javax.swing.GroupLayout(listPanel);
        listPanel.setLayout(listPanelLayout);
        listPanelLayout.setHorizontalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrPane)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(listPanelLayout.createSequentialGroup()
                        .addComponent(lblProfitLoss)
                        .addGap(29, 29, 29)
                        .addComponent(profitLossTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(listPanelLayout.createSequentialGroup()
                        .addComponent(lblTotalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(totalValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        listPanelLayout.setVerticalGroup(
            listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(listPanelLayout.createSequentialGroup()
                .addComponent(scrPane, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblProfitLoss)
                    .addComponent(profitLossTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRemove))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(listPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTotalValue)
                    .addComponent(totalValueTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 31, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("List", listPanel);

        addStockPane.setToolTipText("Add Stocks");

        lblStock.setText("Stock Name:");

        lblQuantity.setText("Quantity:");

        lblPurchasePrice.setText("Purchase Price:");

        lblCurrentPrice.setText("Current Price:");

        btnAddStock.setText("Add Stock");
        btnAddStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStockActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStockPaneLayout = new javax.swing.GroupLayout(addStockPane);
        addStockPane.setLayout(addStockPaneLayout);
        addStockPaneLayout.setHorizontalGroup(
            addStockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStockPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStock)
                    .addComponent(lblQuantity)
                    .addComponent(lblPurchasePrice)
                    .addComponent(lblCurrentPrice))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(addStockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddStock, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchasePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(currentPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        addStockPaneLayout.setVerticalGroup(
            addStockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStockPaneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStock)
                    .addComponent(stockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblQuantity)
                    .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addStockPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addStockPaneLayout.createSequentialGroup()
                        .addComponent(lblPurchasePrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblCurrentPrice))
                    .addGroup(addStockPaneLayout.createSequentialGroup()
                        .addComponent(purchasePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(currentPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(btnAddStock)
                .addContainerGap(50, Short.MAX_VALUE))
        );

        mainTabbedPane.addTab("Add Stock", addStockPane);

        jMenu.setText("File");

        menuItemOpen.setText("Open");
        menuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemOpenActionPerformed(evt);
            }
        });
        jMenu.add(menuItemOpen);

        menuItemSave.setText("Save");
        menuItemSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemSaveActionPerformed(evt);
            }
        });
        jMenu.add(menuItemSave);
        jMenu.add(sep);

        menuItemExit.setText("Exit");
        menuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemExitActionPerformed(evt);
            }
        });
        jMenu.add(menuItemExit);

        jMenuBar.add(jMenu);

        setJMenuBar(jMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(mainTabbedPane, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(mainTabbedPane))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStockActionPerformed
        // DONE add your handling code here:
        //validation
        if(stockTextField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Error Stock name is required","Stock Name Missing",JOptionPane.ERROR_MESSAGE);
            stockTextField.requestFocus();
            return; //stop
        }
        if(quantityTextField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Error Quantity is required","Quantity is Missing",JOptionPane.ERROR_MESSAGE);
            quantityTextField.requestFocus();
            return; //stop
        }
        if(purchasePriceTextField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Error Purchase Price is required","Purchase Price is Missing",JOptionPane.ERROR_MESSAGE);
            purchasePriceTextField.requestFocus();
            return; //stop
        }
        if(currentPriceTextField.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Error Current Price is required","Current Price is Missing",JOptionPane.ERROR_MESSAGE);
            currentPriceTextField.requestFocus();
            return; //stop
        }
        //stock object creation
       
        String stockName = stockTextField.getText();
        double quantity = Double.parseDouble(quantityTextField.getText());
        double purchase = Double.parseDouble(purchasePriceTextField.getText());
        double current = Double.parseDouble(currentPriceTextField.getText());
        Stock S = new Stock(stockName,quantity,purchase,current);
        //add to list
        model.addElement(S);
        stockList.add(S);
        
        //clear form
        stockTextField.setText("");
        quantityTextField.setText("");
        purchasePriceTextField.setText("");
        currentPriceTextField.setText("");
        
        //update total
        updateTotalValue();
    }//GEN-LAST:event_btnAddStockActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        // DONE add your handling code here:
        int position = listStocks.getSelectedIndex();
        
        //remove from model and arrayList
        model.remove(position);
        stockList.remove(position);
        profitLossTextField.setText("");
        updateTotalValue();
        
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void listStocksValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listStocksValueChanged
        // DONE add your handling code here:
        //get selected stock
        Stock S = listStocks.getSelectedValue();
        if (S != null)
        {
          
            profitLossTextField.setText(fmt.format(S.showProifitLoss()));
        }
    }//GEN-LAST:event_listStocksValueChanged

    private void menuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemOpenActionPerformed
        // load data
        String fileName = JOptionPane.showInputDialog("Please Enter File Name: ");
        StockIO input = new StockIO(fileName);
        
        try {
            ArrayList<Stock> stocksFromFile = input.getData();
            
            //clear out current stocks
            model.clear();
            stockList.clear();
            
            //loop through
            for (Stock stk : stocksFromFile) {
                model.addElement(stk);
                stockList.add(stk);
            }
        } 
        catch (FileNotFoundException ex){
            JOptionPane.showMessageDialog(this, "Error: " + fileName +  " was not found","Error Message", JOptionPane.ERROR_MESSAGE);
        }
        catch (IOException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),"Error message: ", JOptionPane.ERROR_MESSAGE);
        }
        updateTotalValue();
    }//GEN-LAST:event_menuItemOpenActionPerformed

    private void menuItemSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemSaveActionPerformed
        // save data
        String fileName = JOptionPane.showInputDialog("Please Enter File Name: ");
        StockIO output = new StockIO(fileName);
        
        try {
            output.saveData(stockList);
            JOptionPane.showMessageDialog(this, "File Saved");
        } catch (IOException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),"Error message: ", JOptionPane.ERROR_MESSAGE);
        }
        
        
    }//GEN-LAST:event_menuItemSaveActionPerformed

    private void menuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemExitActionPerformed
        // exit
        System.exit(0);
    }//GEN-LAST:event_menuItemExitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addStockPane;
    private javax.swing.JButton btnAddStock;
    private javax.swing.JButton btnRemove;
    private javax.swing.JTextField currentPriceTextField;
    private javax.swing.JMenu jMenu;
    private javax.swing.JMenuBar jMenuBar;
    private javax.swing.JLabel lblCurrentPrice;
    private javax.swing.JLabel lblProfitLoss;
    private javax.swing.JLabel lblPurchasePrice;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblStock;
    private javax.swing.JLabel lblTotalValue;
    private javax.swing.JPanel listPanel;
    private javax.swing.JList<Stock> listStocks;
    private javax.swing.JTabbedPane mainTabbedPane;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenuItem menuItemOpen;
    private javax.swing.JMenuItem menuItemSave;
    private javax.swing.JTextField profitLossTextField;
    private javax.swing.JTextField purchasePriceTextField;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.JScrollPane scrPane;
    private javax.swing.JPopupMenu.Separator sep;
    private javax.swing.JTextField stockTextField;
    private javax.swing.JTextField totalValueTextField;
    // End of variables declaration//GEN-END:variables

    private void updateTotalValue() {
        //calculate total value of all stocks
        double totalValue = 0.0;
        //cycle through all stocks and calculate the total value
        for (Stock stk : stockList) {
            double stockValue = stk.getNumShares() * stk.getCurrentPrice();
            totalValue += stockValue;
        }
        //show total value
        DecimalFormat fmt = new DecimalFormat("$#,##0.00");
        totalValueTextField.setText(fmt.format(totalValue));
    }
}
